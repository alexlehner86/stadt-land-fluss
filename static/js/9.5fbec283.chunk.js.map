{"version":3,"sources":["components/ToDashboardButton/ToDashboardButton.tsx","components/ToDashboardButton/ToDashboardButton.module.css","../node_modules/@material-ui/core/esm/utils/createSvgIcon.js","constants/text.constant.ts","../node_modules/@material-ui/core/esm/utils/useControlled.js","components/RejoinRunningGameHint/RejoinRunningGameHint.tsx","components/RejoinRunningGameHint/RejoinRunningGameHint.module.css","utils/error-text.util.ts","containers/JoinGame/JoinGame.module.css","../node_modules/@material-ui/icons/DirectionsWalk.js","../node_modules/@material-ui/core/esm/Snackbar/Snackbar.js","../node_modules/@material-ui/core/esm/SnackbarContent/SnackbarContent.js","containers/JoinGame/JoinGame.tsx"],"names":["ToDashboardButton","props","className","styles","button_wrapper","type","color","variant","size","startIcon","onClick","onReturnToDashboard","module","exports","createSvgIcon","path","displayName","Component","ref","React","createElement","SvgIcon","_extends","muiName","memo","forwardRef","ALL_PLAYERS_TOGETHER","FASTEST_PLAYER","GAME_ID_LABEL","NUMBER_OF_CATEGORIES_LABEL","NUMBER_OF_ROUNDS_LABEL","PLAYER_NAME_LABEL","useControlled","_ref","controlled","defaultProp","default","isControlled","name","state","undefined","current","_React$useState","valueState","setValue","newValue","RejoinRunningGameHintContext","RejoinRunningGameHint","condition","context","hintText","hint_text","component","rejoin_game_button","rejoinRunningGame","getInvalidNameError","getInvalidGameIdError","getInvalidRoundsError","MIN_NUMBER_OF_ROUNDS","MAX_NUMBER_OF_ROUNDS","getTooFewCategoriesError","MIN_NUMBER_OF_CATEGORIES","getTooManyLettersExcludedError","numberOfRounds","round","makePluralIfCountIsNotOne","maxNumberToExclude","STANDARD_ALPHABET","length","_interopRequireDefault","require","Object","defineProperty","value","_react","_default","d","Snackbar","action","_props$anchorOrigin","anchorOrigin","vertical","horizontal","_props$autoHideDurati","autoHideDuration","children","classes","ClickAwayListenerProps","ContentProps","_props$disableWindowB","disableWindowBlurListener","message","onClose","onEnter","onEntered","onEntering","onExit","onExited","onExiting","onMouseEnter","onMouseLeave","open","resumeHideDuration","_props$TransitionComp","TransitionComponent","Grow","_props$transitionDura","transitionDuration","enter","duration","enteringScreen","exit","leavingScreen","TransitionProps","other","_objectWithoutProperties","timerAutoHide","exited","setExited","handleClose","useEventCallback","apply","arguments","setAutoHideTimer","autoHideDurationParam","clearTimeout","setTimeout","handlePause","handleResume","window","addEventListener","removeEventListener","ClickAwayListener","onClickAway","event","clsx","root","concat","capitalize","appear","in","createChainedFunction","timeout","direction","SnackbarContent","withStyles","theme","top1","top","bottom1","bottom","right","justifyContent","left","top3","bottom3","right3","left3","center","transform","zIndex","snackbar","position","display","alignItems","anchorOriginTopCenter","_defineProperty","breakpoints","up","anchorOriginBottomCenter","anchorOriginTopRight","anchorOriginBottomRight","anchorOriginTopLeft","anchorOriginBottomLeft","flip","_props$role","role","Paper","square","elevation","emphasis","palette","backgroundColor","emphasize","background","typography","body2","getContrastText","flexWrap","padding","borderRadius","shape","flexGrow","minWidth","marginLeft","paddingLeft","marginRight","JoinGame","a11yMessageAssertive","idInput","isSnackbarOpen","nameInput","playerInfo","snackBarDuration","snackBarMessage","validateInputs","handleInputChange","target","setState","handleSubmit","preventDefault","trimmedName","trim","joinGame","alertUser","handleSnackBarClose","idCreationTimestamp","playerIdCreationTimestamp","removeAllDataOfRunningGameFromLocalStorage","setPlayerInfoInLocalStorage","id","setRunningGameInfoInLocalStorage","gameId","convertDateToUnixTimestamp","Date","isPlayerAdmin","onSetGameData","gameConfig","isRejoiningGame","isAdmin","history","push","onPrepareRejoiningGame","returnToDashboard","playerNameAriaLabel","PLAYER_NAME_MAX_LENGTH","playerNameVisibleLabel","isNameInvalid","this","isIdInvalid","joinGameForm","onSubmit","noValidate","autoComplete","htmlFor","label","fullWidth","required","autoFocus","error","helperText","inputProps","maxLength","onChange","rejoinRunningGameElement","joingame","text","alert_snackbar","aria-live","clearOnUnmount","query","URLSearchParams","location","search","has","get","joinGameErrorMessage","prevProps","connect","dispatch","prepareRejoiningGame","payload","setDataForNewGame"],"mappings":"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","file":"static/js/9.5fbec283.chunk.js","sourcesContent":["import { Button } from '@material-ui/core';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport React from 'react';\r\n\r\nimport styles from './ToDashboardButton.module.css';\r\n\r\ninterface ToDashboardButtonProps {\r\n    onReturnToDashboard: () => any;\r\n}\r\n\r\nconst ToDashboardButton: React.FunctionComponent<ToDashboardButtonProps> = props => {\r\n    return (\r\n        <div className={styles.button_wrapper}>\r\n            <Button\r\n                type=\"button\"\r\n                color=\"default\"\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                startIcon={<ExitToAppIcon />}\r\n                onClick={props.onReturnToDashboard}\r\n            >Dashboard</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToDashboardButton;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_wrapper\":\"ToDashboardButton_button_wrapper__1EtAB\"};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '../SvgIcon';\n/**\n * Private module reserved for @material-ui/x packages.\n */\n\nexport default function createSvgIcon(path, displayName) {\n  var Component = function Component(props, ref) {\n    return /*#__PURE__*/React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Need to set `displayName` on the inner component for React.memo.\n    // React prior to 16.14 ignores `displayName` on the wrapper.\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Component));\n}","export const ALL_PLAYERS_TOGETHER = 'Alle Spielenden gemeinsam';\r\nexport const FASTEST_PLAYER = 'Schnellste Person';\r\nexport const GAME_ID_LABEL = 'Spiel-ID';\r\nexport const NUMBER_OF_CATEGORIES_LABEL = 'Anzahl Kategorien';\r\nexport const NUMBER_OF_ROUNDS_LABEL = 'Anzahl Runden';\r\nexport const PLAYER_NAME_LABEL = 'Spielername';\r\n","/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled(_ref) {\n  var controlled = _ref.controlled,\n      defaultProp = _ref.default,\n      name = _ref.name,\n      _ref$state = _ref.state,\n      state = _ref$state === void 0 ? 'value' : _ref$state;\n\n  var _React$useRef = React.useRef(controlled !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultProp),\n      valueState = _React$useState[0],\n      setValue = _React$useState[1];\n\n  var value = isControlled ? controlled : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(function () {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([\"Material-UI: A component is changing the \".concat(isControlled ? '' : 'un', \"controlled \").concat(state, \" state of \").concat(name, \" to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', \"Decide between using a controlled or uncontrolled \".concat(name, \" \") + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render, it's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [controlled]);\n\n    var _React$useRef2 = React.useRef(defaultProp),\n        defaultValue = _React$useRef2.current;\n\n    React.useEffect(function () {\n      if (!isControlled && defaultValue !== defaultProp) {\n        console.error([\"Material-UI: A component is changing the default \".concat(state, \" state of an uncontrolled \").concat(name, \" after being initialized. \") + \"To suppress this warning opt to use a controlled \".concat(name, \".\")].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n\n  var setValueIfUncontrolled = React.useCallback(function (newValue) {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","import { Link } from '@material-ui/core';\r\nimport DirectionsRunIcon from '@material-ui/icons/DirectionsRun';\r\nimport React from 'react';\r\n\r\nimport styles from './RejoinRunningGameHint.module.css';\r\n\r\nexport enum RejoinRunningGameHintContext {\r\n    newgame = 'newgame',\r\n    joingame = 'joingame'\r\n}\r\n\r\ninterface RejoinRunningGameHintProps {\r\n    context: RejoinRunningGameHintContext;\r\n    rejoinRunningGame: () => void;\r\n}\r\nexport const RejoinRunningGameHint: React.FunctionComponent<RejoinRunningGameHintProps> = props => {\r\n    const condition = props.context === 'newgame' ? 'ein neues Spiel erstellst' : 'einem anderen Spiel beitrittst';\r\n    const hintText = `Du nimmst bereits an einem laufenden Spiel teil. Wenn du ${condition},\r\n    kannst du nicht mehr in das alte Spiel zurückkehren!`;\r\n\r\n    return (\r\n        <div className=\"material-card-style\">\r\n            <p className={styles.hint_text}>\r\n                <span className=\"rejoin-running-game-hint-highlighted\">Achtung: </span>\r\n                {hintText}\r\n            </p>\r\n            <Link\r\n                component=\"button\"\r\n                className={styles.rejoin_game_button}\r\n                onClick={props.rejoinRunningGame}\r\n            >\r\n                <DirectionsRunIcon />\r\n                Zurück ins laufende Spiel\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hint_text\":\"RejoinRunningGameHint_hint_text__24Gb_\",\"rejoin_game_button\":\"RejoinRunningGameHint_rejoin_game_button__1Tob4\"};","import { MAX_NUMBER_OF_ROUNDS, MIN_NUMBER_OF_CATEGORIES, MIN_NUMBER_OF_ROUNDS, STANDARD_ALPHABET } from '../constants/game.constant';\r\nimport { makePluralIfCountIsNotOne } from './general.utils';\r\n\r\n\r\nexport const getInvalidNameError = (): string => {\r\n    return 'Du musst einen Spielernamen eingeben';\r\n};\r\n\r\nexport const getInvalidGameIdError = (): string => {\r\n    return 'Du musst eine Spiel-ID eingeben';\r\n};\r\n\r\nexport const getInvalidRoundsError = (): string => {\r\n    return `Die Anzahl an Runden muss zwischen ${MIN_NUMBER_OF_ROUNDS} und ${MAX_NUMBER_OF_ROUNDS} liegen`;\r\n};\r\n\r\nexport const getTooFewCategoriesError = (): string => {\r\n    return `Wähle mindestens ${MIN_NUMBER_OF_CATEGORIES} Kategorien aus. Zum Beispiel: Stadt, Land und Fluss/Gewässer`;\r\n};\r\n\r\nexport const getTooManyLettersExcludedError = (numberOfRounds: number): string => {\r\n    const round = makePluralIfCountIsNotOne(numberOfRounds, 'Runde', 'Runden'); \r\n    const maxNumberToExclude = STANDARD_ALPHABET.length - numberOfRounds;\r\n    return `Du hast zu viele Buchstaben ausgeschlossen! Bei ${numberOfRounds} ${round} darfst du maximal ${maxNumberToExclude} Buchstaben ausschließen`;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert_snackbar\":\"JoinGame_alert_snackbar__3KqkF\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M13.5 5.5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zM9.8 8.9L7 23h2.1l1.8-8 2.1 2v6h2v-7.5l-2.1-2 .6-3C14.8 12 16.8 13 19 13v-2c-1.9 0-3.5-1-4.3-2.4l-1-1.6c-.4-.6-1-1-1.7-1-.3 0-.5.1-.8.1L6 8.3V13h2V9.6l1.8-.7\"\n}), 'DirectionsWalk');\n\nexports.default = _default;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nexport var styles = function styles(theme) {\n  var top1 = {\n    top: 8\n  };\n  var bottom1 = {\n    bottom: 8\n  };\n  var right = {\n    justifyContent: 'flex-end'\n  };\n  var left = {\n    justifyContent: 'flex-start'\n  };\n  var top3 = {\n    top: 24\n  };\n  var bottom3 = {\n    bottom: 24\n  };\n  var right3 = {\n    right: 24\n  };\n  var left3 = {\n    left: 24\n  };\n  var center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      zIndex: theme.zIndex.snackbar,\n      position: 'fixed',\n      display: 'flex',\n      left: 8,\n      right: 8,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */\n    anchorOriginTopCenter: _extends({}, top1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, top3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */\n    anchorOriginBottomCenter: _extends({}, bottom1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, bottom3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */\n    anchorOriginTopRight: _extends({}, top1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, top3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */\n    anchorOriginBottomRight: _extends({}, bottom1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, bottom3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */\n    anchorOriginTopLeft: _extends({}, top1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, top3, left3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */\n    anchorOriginBottomLeft: _extends({}, bottom1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, bottom3, left3)))\n  };\n};\nvar Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(props, ref) {\n  var action = props.action,\n      _props$anchorOrigin = props.anchorOrigin;\n  _props$anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'bottom',\n    horizontal: 'center'\n  } : _props$anchorOrigin;\n\n  var vertical = _props$anchorOrigin.vertical,\n      horizontal = _props$anchorOrigin.horizontal,\n      _props$autoHideDurati = props.autoHideDuration,\n      autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      ClickAwayListenerProps = props.ClickAwayListenerProps,\n      ContentProps = props.ContentProps,\n      _props$disableWindowB = props.disableWindowBlurListener,\n      disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\n      message = props.message,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      open = props.open,\n      resumeHideDuration = props.resumeHideDuration,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n  } : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"classes\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  var timerAutoHide = React.useRef();\n\n  var _React$useState = React.useState(true),\n      exited = _React$useState[0],\n      setExited = _React$useState[1];\n\n  var handleClose = useEventCallback(function () {\n    if (onClose) {\n      onClose.apply(void 0, arguments);\n    }\n  });\n  var setAutoHideTimer = useEventCallback(function (autoHideDurationParam) {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(function () {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(function () {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return function () {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  var handlePause = function handlePause() {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  var handleResume = React.useCallback(function () {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  var handleMouseEnter = function handleMouseEnter(event) {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  var handleMouseLeave = function handleMouseLeave(event) {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  var handleClickAway = function handleClickAway(event) {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n  };\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  React.useEffect(function () {\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return function () {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps), /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"anchorOrigin\".concat(capitalize(vertical)).concat(capitalize(horizontal))], className),\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    onEnter: createChainedFunction(handleEnter, onEnter),\n    onEntered: onEntered,\n    onEntering: onEntering,\n    onExit: onExit,\n    onExited: createChainedFunction(handleExited, onExited),\n    onExiting: onExiting,\n    timeout: transitionDuration,\n    direction: vertical === 'top' ? 'down' : 'up'\n  }, TransitionProps), children || /*#__PURE__*/React.createElement(SnackbarContent, _extends({\n    message: message,\n    action: action\n  }, ContentProps)))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: PropTypes.any,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is entering.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the transition has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the transition is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is exiting.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the transition has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the transition is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, `Snackbar` is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiSnackbar'\n})(Snackbar);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Paper from '../Paper';\nimport { emphasize } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  var emphasis = theme.palette.type === 'light' ? 0.8 : 0.98;\n  var backgroundColor = emphasize(theme.palette.background.default, emphasis);\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, _defineProperty({\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      display: 'flex',\n      alignItems: 'center',\n      flexWrap: 'wrap',\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      flexGrow: 1\n    }, theme.breakpoints.up('sm'), {\n      flexGrow: 'initial',\n      minWidth: 288\n    })),\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar SnackbarContent = /*#__PURE__*/React.forwardRef(function SnackbarContent(props, ref) {\n  var action = props.action,\n      classes = props.classes,\n      className = props.className,\n      message = props.message,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      other = _objectWithoutProperties(props, [\"action\", \"classes\", \"className\", \"message\", \"role\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 6,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, message), action ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSnackbarContent'\n})(SnackbarContent);","import { Button, Snackbar, SnackbarContent, TextField } from '@material-ui/core';\r\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\r\nimport React, { ChangeEvent, Component, Dispatch, FormEvent } from 'react';\r\nimport { LiveMessage } from 'react-aria-live';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\n\r\nimport {\r\n    RejoinRunningGameHint,\r\n    RejoinRunningGameHintContext,\r\n} from '../../components/RejoinRunningGameHint/RejoinRunningGameHint';\r\nimport { SectionHeader } from '../../components/SectionHeader/SectionHeader';\r\nimport ToDashboardButton from '../../components/ToDashboardButton/ToDashboardButton';\r\nimport { PLAYER_NAME_MAX_LENGTH } from '../../constants/app.constant';\r\nimport { GAME_ID_LABEL, PLAYER_NAME_LABEL } from '../../constants/text.constant';\r\nimport { PlayerInfo } from '../../models/player.interface';\r\nimport { AppAction, prepareRejoiningGame, setDataForNewGame, SetDataForNewGamePayload } from '../../store/app.actions';\r\nimport { AppState } from '../../store/app.reducer';\r\nimport { getInvalidGameIdError, getInvalidNameError } from '../../utils/error-text.util';\r\nimport { convertDateToUnixTimestamp } from '../../utils/general.utils';\r\nimport {\r\n    removeAllDataOfRunningGameFromLocalStorage,\r\n    setPlayerInfoInLocalStorage,\r\n    setRunningGameInfoInLocalStorage,\r\n} from '../../utils/local-storage.utils';\r\nimport styles from './JoinGame.module.css';\r\n\r\ninterface JoinGamePropsFromStore {\r\n    gameId: string | null;\r\n    joinGameErrorMessage: string | null;\r\n    playerIdCreationTimestamp: number;\r\n    playerInfo: PlayerInfo | null;\r\n}\r\ninterface JoinGameDispatchProps {\r\n    onPrepareRejoiningGame: () => void;\r\n    onSetGameData: (payload: SetDataForNewGamePayload) => void\r\n}\r\ninterface JoinGameProps extends JoinGamePropsFromStore, JoinGameDispatchProps, RouteComponentProps { }\r\ninterface JoinGameState {\r\n    a11yMessageAssertive: string;\r\n    idInput: string;\r\n    isSnackbarOpen: boolean;\r\n    nameInput: string;\r\n    snackBarDuration: number;\r\n    snackBarMessage: string;\r\n    validateInputs: boolean;\r\n}\r\n\r\nclass JoinGame extends Component<JoinGameProps, JoinGameState> {\r\n    public state: JoinGameState = {\r\n        a11yMessageAssertive: '',\r\n        idInput: '',\r\n        isSnackbarOpen: false,\r\n        nameInput: this.props.playerInfo ? this.props.playerInfo.name : '',\r\n        snackBarDuration: 3000,\r\n        snackBarMessage: '',\r\n        validateInputs: false\r\n    };\r\n\r\n    public render() {\r\n        const playerNameAriaLabel = `${PLAYER_NAME_LABEL} (maximal ${PLAYER_NAME_MAX_LENGTH} Zeichen)`;\r\n        const playerNameVisibleLabel = `${PLAYER_NAME_LABEL} (max. ${PLAYER_NAME_MAX_LENGTH} Zeichen)`;\r\n        const isNameInvalid = this.state.validateInputs && !this.state.nameInput;\r\n        const isIdInvalid = this.state.validateInputs && !this.state.idInput;\r\n        const joinGameForm = (\r\n            <form onSubmit={this.handleSubmit} className=\"app-form\" noValidate autoComplete=\"off\">\r\n                <label htmlFor=\"player-name-input\" className=\"sr-only\">{playerNameAriaLabel}</label>\r\n                <TextField\r\n                    name=\"nameInput\"\r\n                    label={playerNameVisibleLabel}\r\n                    value={this.state.nameInput}\r\n                    className=\"app-form-input\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                    autoFocus\r\n                    error={isNameInvalid}\r\n                    helperText={isNameInvalid ? getInvalidNameError() : ''}\r\n                    inputProps={{\r\n                        id: 'player-name-input',\r\n                        autoComplete: 'nickname',\r\n                        maxLength: PLAYER_NAME_MAX_LENGTH\r\n                    }}\r\n                    onChange={this.handleInputChange}\r\n                />\r\n                <label htmlFor=\"game-id-input\" className=\"sr-only\">{GAME_ID_LABEL}</label>\r\n                <TextField\r\n                    name=\"idInput\"\r\n                    label={GAME_ID_LABEL}\r\n                    value={this.state.idInput}\r\n                    className=\"app-form-input\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                    error={isIdInvalid}\r\n                    helperText={isIdInvalid ? getInvalidGameIdError() : ''}\r\n                    inputProps={{ id: 'game-id-input' }}\r\n                    onChange={this.handleInputChange}\r\n                />\r\n                <div className=\"button-wrapper\">\r\n                    <Button\r\n                        type=\"submit\"\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        size=\"large\"\r\n                        startIcon={<DirectionsWalkIcon />}\r\n                    >Beitreten</Button>\r\n                </div>\r\n            </form>\r\n        );\r\n        const rejoinRunningGameElement = (\r\n            <RejoinRunningGameHint\r\n                context={RejoinRunningGameHintContext.joingame}\r\n                rejoinRunningGame={this.rejoinRunningGame}\r\n            />\r\n        );\r\n        return (\r\n            <div className=\"main-content-wrapper\">\r\n                {this.props.gameId ? rejoinRunningGameElement : null}\r\n                <div className=\"material-card-style\">\r\n                    <SectionHeader text=\"Spiel beitreten\"></SectionHeader>\r\n                    {joinGameForm}\r\n                </div>\r\n                <ToDashboardButton onReturnToDashboard={this.returnToDashboard} />\r\n                <Snackbar\r\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n                    open={this.state.isSnackbarOpen}\r\n                    autoHideDuration={this.state.snackBarDuration}\r\n                    onClose={this.handleSnackBarClose}\r\n                >\r\n                    <SnackbarContent\r\n                        classes={{ root: styles.alert_snackbar }}\r\n                        message={this.state.snackBarMessage}\r\n                    ></SnackbarContent>\r\n                </Snackbar>\r\n                <LiveMessage\r\n                    message={this.state.a11yMessageAssertive}\r\n                    aria-live=\"assertive\"\r\n                    clearOnUnmount=\"true\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    public componentDidMount() {\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        if (query.has('id')) {\r\n            this.setState({ idInput: query.get('id') as string });\r\n        }\r\n        if (this.props.joinGameErrorMessage) {\r\n            this.alertUser(this.props.joinGameErrorMessage, 10000);\r\n        }\r\n    }\r\n\r\n    public componentDidUpdate(prevProps: JoinGameProps) {\r\n        if (this.props.playerInfo && this.props.playerInfo !== prevProps.playerInfo) {\r\n            this.setState({ nameInput: this.props.playerInfo.name });\r\n        }\r\n    }\r\n\r\n    private handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value } as any);\r\n    }\r\n\r\n    private handleSubmit = (event: FormEvent) => {\r\n        event.preventDefault();\r\n        const trimmedName = this.state.nameInput.trim();\r\n        if (trimmedName && this.state.idInput) {\r\n            this.joinGame();\r\n        } else {\r\n            this.setState({ nameInput: trimmedName, validateInputs: true });\r\n            this.alertUser(!trimmedName ? getInvalidNameError() : getInvalidGameIdError());\r\n        }\r\n    }\r\n\r\n    private alertUser = (message: string, snackBarDuration = 3000) => this.setState(\r\n        { a11yMessageAssertive: message, isSnackbarOpen: true, snackBarDuration, snackBarMessage: message }\r\n    );\r\n\r\n    private handleSnackBarClose = () => this.setState({ isSnackbarOpen: false });\r\n\r\n    private joinGame = () => {\r\n        const playerInfo = this.props.playerInfo as PlayerInfo;\r\n        const idCreationTimestamp = this.props.playerIdCreationTimestamp;\r\n        const { idInput, nameInput } = this.state;\r\n        removeAllDataOfRunningGameFromLocalStorage();\r\n        setPlayerInfoInLocalStorage({ id: playerInfo.id, idCreationTimestamp, name: nameInput.trim() });\r\n        setRunningGameInfoInLocalStorage({ gameId: idInput, idCreationTimestamp: convertDateToUnixTimestamp(new Date()), isPlayerAdmin: false });\r\n        this.props.onSetGameData({\r\n            gameConfig: null,\r\n            gameId: idInput,\r\n            isRejoiningGame: false,\r\n            playerInfo: {\r\n                id: playerInfo.id,\r\n                isAdmin: false,\r\n                name: nameInput.trim()\r\n            }\r\n        });\r\n        this.props.history.push('/play');\r\n    }\r\n\r\n    private rejoinRunningGame = () => {\r\n        this.props.onPrepareRejoiningGame();\r\n        this.props.history.push('/play');\r\n    }\r\n\r\n    private returnToDashboard = () => {\r\n        this.props.history.push('/');\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): JoinGamePropsFromStore => {\r\n    return {\r\n        gameId: state.gameId,\r\n        joinGameErrorMessage: state.joinGameErrorMessage,\r\n        playerIdCreationTimestamp: state.playerIdCreationTimestamp,\r\n        playerInfo: state.playerInfo\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch: Dispatch<AppAction>): JoinGameDispatchProps => {\r\n    return {\r\n        onPrepareRejoiningGame: () => dispatch(prepareRejoiningGame()),\r\n        onSetGameData: (payload: SetDataForNewGamePayload) => dispatch(setDataForNewGame(payload))\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(JoinGame);\r\n"],"sourceRoot":""}